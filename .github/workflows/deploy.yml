name: Deploy Ombu

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # üì¶ Checkout del c√≥digo fuente
      - name: Checkout code
        uses: actions/checkout@v4

      # ‚úÖ Validaci√≥n de secrets antes de continuar
      - name: Validar secrets del repositorio
        run: |
          missing=0
          for secret in DOCKER_HUB_USER DOCKER_HUB_TOKEN DO_HOST DO_USER DO_SSH_KEY GH_PAT DOTENV GOOGLE_CREDENTIALS_JSON; do
            if [ -z "${{ secrets[$secret] }}" ]; then
              echo "‚ùå Falta $secret"
              missing=1
            fi
          done
          if [ $missing -ne 0 ]; then
            echo "‚ùå Faltan variables obligatorias, abortando workflow."
            exit 1
          fi
          echo "‚úÖ Todos los secrets requeridos est√°n definidos"

      # üîë Login a Docker Hub
      - name: Log in en Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # üê≥ Build & Push de la imagen
      - name: Build & Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USER }}/ombu:latest

      # üöÄ Deploy remoto en Droplet DigitalOcean
      - name: Deploy to Droplet
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            set -e
            echo "üì¶ Iniciando despliegue remoto en /srv/ombu..."

            # Crear estructura si no existe
            mkdir -p /srv/ombu/credentials
            cd /srv/ombu

            # Clonar o actualizar el repo
            if [ ! -d "/srv/ombu/.git" ]; then
              echo "üì• Primera implementaci√≥n: clonando repo..."
              rm -rf /srv/ombu
              git clone https://oauth2:${{ secrets.GH_PAT }}@github.com/dtech-dh/ombu.git /srv/ombu
            else
              echo "üîÑ Actualizando repo existente..."
              cd /srv/ombu
              git reset --hard
              git pull https://oauth2:${{ secrets.GH_PAT }}@github.com/dtech-dh/ombu.git main
            fi

            # Escribir el archivo .env
            echo "üìù Generando archivo .env"
            echo "${{ secrets.DOTENV }}" > /srv/ombu/.env

            # Escribir credenciales de Google (Service Account)
            echo "üîë Generando service_account.json"
            echo '${{ secrets.GOOGLE_CREDENTIALS_JSON }}' > /srv/ombu/credentials/service_account.json

            # Verificar que el archivo sea v√°lido
            if [ ! -s /srv/ombu/credentials/service_account.json ]; then
              echo "‚ùå Error: el archivo service_account.json est√° vac√≠o o no existe"
              exit 1
            fi

            echo "üê≥ Ejecutando docker compose..."
            docker compose pull
            docker compose up -d --build

            echo "‚úÖ Despliegue completado correctamente."
